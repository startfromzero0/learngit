一、系统启动过程：
	1、内核引导：计算机开机后，首先BIOS开机自检，按照BIOS中设置的启动设备（通常是硬盘）来启动。操作系统接管硬件以后，首先读入 /boot 目录下的内核文件
	2、运行init：init是所有进程的起点（windows是explorer.exe），init程序首先读取配置文件/etc/inittab
				运行级别：许多程序需要开机启动。它们在Windows叫做"服务"（service），在Linux就叫做"守护进程"（daemon）。
				init进程的一大任务，就是去运行这些开机启动的程序。但是，不同的场合需要启动不同的程序，比如用作服务器时，需要启动Apache，用作桌面就不需要。
				Linux允许为不同的场合，分配不同的开机启动程序，这就叫做"运行级别"（runlevel）。也就是说，启动时根据"运行级别"，确定要运行哪些程序。
				Linux系统有7个运行级别(runlevel)：
				运行级别0：系统停机状态，系统默认运行级别不能设为0，否则不能正常启动
				运行级别1：单用户工作状态，root权限，用于系统维护，禁止远程登陆
				运行级别2：多用户状态(没有NFS)
				运行级别3：完全的多用户状态(有NFS)，登陆后进入控制台命令行模式
				运行级别4：系统未使用，保留
				运行级别5：X11控制台，登陆后进入图形GUI模式
				运行级别6：系统正常关闭并重启，默认运行级别不能设为6，否则不能正常启动
	3、系统初始化：在init的配置文件中有这么一行： si::sysinit:/etc/rc.d/rc.sysinit　它调用执行了/etc/rc.d/rc.sysinit，而rc.sysinit是一个bash shell的脚本，它主要是完成一些系统初始化的工作，rc.sysinit是每一个运行级别都要首先运行的重要脚本。
					它主要完成的工作有：激活交换分区，检查磁盘，加载硬件模块以及其它一些需要优先执行任务
	4、建立终端：rc执行完毕后，返回init。这时基本系统环境已经设置好了，各种守护进程也已经启动了。init接下来会打开6个终端，以便用户登录系统
	5、用户登录系统

二、vi/vim 按键说明
	第一部份：一般模式可用的光标移动、复制粘贴、搜索替换等
	移动光标的方法
	h 或 向左箭头键(←)	光标向左移动一个字符
	j 或 向下箭头键(↓)	光标向下移动一个字符
	k 或 向上箭头键(↑)	光标向上移动一个字符
	l 或 向右箭头键(→)	光标向右移动一个字符
	如果你将右手放在键盘上的话，你会发现 hjkl 是排列在一起的，因此可以使用这四个按钮来移动光标。 如果想要进行多次移动的话，例如向下移动 30 行，可以使用 "30j" 或 "30↓" 的组合按键， 亦即加上想要进行的次数(数字)后，按下动作即可！
	[Ctrl] + [f]	屏幕『向下』移动一页，相当于 [Page Down]按键 (常用)
	[Ctrl] + [b]	屏幕『向上』移动一页，相当于 [Page Up] 按键 (常用)
	[Ctrl] + [d]	屏幕『向下』移动半页
	[Ctrl] + [u]	屏幕『向上』移动半页
	+	光标移动到非空格符的下一行
	-	光标移动到非空格符的上一行
	n<space>	那个 n 表示『数字』，例如 20 。按下数字后再按空格键，光标会向右移动这一行的 n 个字符。例如 20<space> 则光标会向后面移动 20 个字符距离。
	0 或功能键[Home]	这是数字『 0 』：移动到这一行的最前面字符处 (常用)
	$ 或功能键[End]	移动到这一行的最后面字符处(常用)
	H	光标移动到这个屏幕的最上方那一行的第一个字符
	M	光标移动到这个屏幕的中央那一行的第一个字符
	L	光标移动到这个屏幕的最下方那一行的第一个字符
	G	移动到这个档案的最后一行(常用)
	nG	n 为数字。移动到这个档案的第 n 行。例如 20G 则会移动到这个档案的第 20 行(可配合 :set nu)
	gg	移动到这个档案的第一行，相当于 1G 啊！ (常用)
	n<Enter>	n 为数字。光标向下移动 n 行(常用)
	搜索替换
	/word	向光标之下寻找一个名称为 word 的字符串。例如要在档案内搜寻 vbird 这个字符串，就输入 /vbird 即可！ (常用)
	?word	向光标之上寻找一个字符串名称为 word 的字符串。
	n	这个 n 是英文按键。代表重复前一个搜寻的动作。举例来说， 如果刚刚我们执行 /vbird 去向下搜寻 vbird 这个字符串，则按下 n 后，会向下继续搜寻下一个名称为 vbird 的字符串。如果是执行 ?vbird 的话，那么按下 n 则会向上继续搜寻名称为 vbird 的字符串！
	N	这个 N 是英文按键。与 n 刚好相反，为『反向』进行前一个搜寻动作。 例如 /vbird 后，按下 N 则表示『向上』搜寻 vbird 。
	使用 /word 配合 n 及 N 是非常有帮助的！可以让你重复的找到一些你搜寻的关键词！
	:n1,n2s/word1/word2/g	n1 与 n2 为数字。在第 n1 与 n2 行之间寻找 word1 这个字符串，并将该字符串取代为 word2 ！举例来说，在 100 到 200 行之间搜寻 vbird 并取代为 VBIRD 则：
	『:100,200s/vbird/VBIRD/g』。(常用)
	:1,$s/word1/word2/g	从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2 ！(常用)
	:1,$s/word1/word2/gc	从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2 ！且在取代前显示提示字符给用户确认 (confirm) 是否需要取代！(常用)
	删除、复制与贴上
	x, X	在一行字当中，x 为向后删除一个字符 (相当于 [del] 按键)， X 为向前删除一个字符(相当于 [backspace] 亦即是退格键) (常用)
	nx	n 为数字，连续向后删除 n 个字符。举例来说，我要连续删除 10 个字符， 『10x』。
	dd	删除游标所在的那一整行(常用)
	ndd	n 为数字。删除光标所在的向下 n 行，例如 20dd 则是删除 20 行 (常用)
	d1G	删除光标所在到第一行的所有数据
	dG	删除光标所在到最后一行的所有数据
	d$	删除游标所在处，到该行的最后一个字符
	d0	那个是数字的 0 ，删除游标所在处，到该行的最前面一个字符
	yy	复制游标所在的那一行(常用)
	nyy	n 为数字。复制光标所在的向下 n 行，例如 20yy 则是复制 20 行(常用)
	y1G	复制游标所在行到第一行的所有数据
	yG	复制游标所在行到最后一行的所有数据
	y0	复制光标所在的那个字符到该行行首的所有数据
	y$	复制光标所在的那个字符到该行行尾的所有数据
	p, P	p 为将已复制的数据在光标下一行贴上，P 则为贴在游标上一行！ 举例来说，我目前光标在第 20 行，且已经复制了 10 行数据。则按下 p 后， 那 10 行数据会贴在原本的 20 行之后，亦即由 21 行开始贴。但如果是按下 P 呢？ 那么原本的第 20 行会被推到变成 30 行。 (常用)
	J	将光标所在行与下一行的数据结合成同一行
	c	重复删除多个数据，例如向下删除 10 行，[ 10cj ]
	u	复原前一个动作。(常用)
	[Ctrl]+r	重做上一个动作。(常用)
	这个 u 与 [Ctrl]+r 是很常用的指令！一个是复原，另一个则是重做一次～ 利用这两个功能按键，你的编辑，嘿嘿！很快乐的啦！
	.	不要怀疑！这就是小数点！意思是重复前一个动作的意思。 如果你想要重复删除、重复贴上等等动作，按下小数点『.』就好了！ (常用)
	第二部份：一般模式切换到编辑模式的可用的按钮说明
	进入输入或取代的编辑模式
	i, I	进入输入模式(Insert mode)：
	i 为『从目前光标所在处输入』， I 为『在目前所在行的第一个非空格符处开始输入』。 (常用)
	a, A	进入输入模式(Insert mode)：
	a 为『从目前光标所在的下一个字符处开始输入』， A 为『从光标所在行的最后一个字符处开始输入』。(常用)
	o, O	进入输入模式(Insert mode)：
	这是英文字母 o 的大小写。o 为『在目前光标所在的下一行处输入新的一行』； O 为在目前光标所在处的上一行输入新的一行！(常用)
	r, R	进入取代模式(Replace mode)：
	r 只会取代光标所在的那一个字符一次；R会一直取代光标所在的文字，直到按下 ESC 为止；(常用)
	上面这些按键中，在 vi 画面的左下角处会出现『--INSERT--』或『--REPLACE--』的字样。 由名称就知道该动作了吧！！特别注意的是，我们上面也提过了，你想要在档案里面输入字符时， 一定要在左下角处看到 INSERT 或 REPLACE 才能输入喔！
	[Esc]	退出编辑模式，回到一般模式中(常用)
	第三部份：一般模式切换到指令行模式的可用的按钮说明
	指令行的储存、离开等指令
	:w	将编辑的数据写入硬盘档案中(常用)
	:w!	若文件属性为『只读』时，强制写入该档案。不过，到底能不能写入， 还是跟你对该档案的档案权限有关啊！
	:q	离开 vi (常用)
	:q!	若曾修改过档案，又不想储存，使用 ! 为强制离开不储存档案。
	注意一下啊，那个惊叹号 (!) 在 vi 当中，常常具有『强制』的意思～
	:wq	储存后离开，若为 :wq! 则为强制储存后离开 (常用)
	ZZ	这是大写的 Z 喔！若档案没有更动，则不储存离开，若档案已经被更动过，则储存后离开！
	:w [filename]	将编辑的数据储存成另一个档案（类似另存新档）
	:r [filename]	在编辑的数据中，读入另一个档案的数据。亦即将 『filename』 这个档案内容加到游标所在行后面
	:n1,n2 w [filename]	将 n1 到 n2 的内容储存成 filename 这个档案。
	:! command	暂时离开 vi 到指令行模式下执行 command 的显示结果！例如
	『:! ls /home』即可在 vi 当中察看 /home 底下以 ls 输出的档案信息！
	vim 环境的变更
	:set nu	显示行号，设定之后，会在每一行的前缀显示该行的行号
	:set nonu	与 set nu 相反，为取消行号！
三、yum常用命令
	1.列出所有可更新的软件清单命令：yum check-update
	2.更新所有软件命令：yum update
	3.仅安装指定的软件命令：yum install <package_name>
	4.仅更新指定的软件命令：yum update <package_name>
	5.列出所有可安裝的软件清单命令：yum list
	6.删除软件包命令：yum remove <package_name>
	7.查找软件包 命令：yum search <keyword>
	8.清除缓存命令:
	yum clean packages: 清除缓存目录下的软件包
	yum clean headers: 清除缓存目录下的 headers
    yum clean oldheaders: 清除缓存目录下旧的 headers
    yum clean, yum clean all (= yum clean packages; yum clean oldheaders) :清除缓存目录下的软件包及旧的headers
四、Linux常用命令：
	1、查找文件
	  which [filename]:该命令用于查询通过PATH路径到该路径内查找可执行文件
	  whereis [-bmsu] [keyword]:该命令用于把相关字的文件和目录都列出来
	  locate [filename]:该命令用于把相关字的文件和目录都列出来
	  find [path] [参数] [keyword]；该命令用于在指定路径下查找文件。因为在硬盘上找，所以速度较慢
	                                -mount, -xdev : 只检查和指定目录在同一个文件系统下的文件，避免列出其它文件系统中的文件
                                    -amin n : 在过去 n 分钟内被读取过
                                    -anewer file : 比文件 file 更晚被读取过的文件
                                    -atime n : 在过去 n 天过读取过的文件
                                    -cmin n : 在过去 n 分钟内被修改过
                                    -cnewer file :比文件 file 更新的文件
                                    -ctime n : 在过去 n 天过修改过的文件
                                    -empty : 空的文件-gid n or -group name : gid 是 n 或是 group 名称是 name
                                    -ipath p, -path p : 路径名称符合 p 的文件，ipath 会忽略大小写
                                    -name name, -iname name : 文件名称符合 name 的文件。iname 会忽略大小写
                                    -size n : 文件大小 是 n 单位，b 代表 512 位元组的区块，c 表示字元数，k 表示 kilo bytes，w 是二个位元组。
									-type c : 文件类型是 c 的文件。
                                           d：目录
                                           c: 字型装置文件
                                           b: 区块装置文件
                                           p: 具名贮列
                                           f: 一般文件
                                           l: 符号连结
                                           s: socket
                                    -pid n : process id 是 n 的文件
	
	2、三个关于时间的属性：
	  mtime:(modify time)修改时间，当文件内的数据修改时，该时间更新，更改权限或属性时，修改时间不变
	  atime:(access time)访问时间，当使用这个文件时，该时间会更新，即凡读取而不修改文件
	  ctime:(change time)状态修改时间，当文件属性或文件位置变动会更新该时间
			   
	3、查看动态日志文件：tail -f /var/log/messages
	4、grep常用用法： grep [-acinv] [--color=auto] '搜寻字符串' filename
						选项与参数：
						-a ：将 binary 文件以 text 文件的方式搜寻数据
						-c ：计算找到 '搜寻字符串' 的次数
						-i ：忽略大小写的不同，所以大小写视为相同
						-n ：顺便输出行号
						-v ：反向选择，亦即显示出没有 '搜寻字符串' 内容的那一行！
						--color=auto ：可以将找到的关键词部分加上颜色的显示
五、文件说明：			   
	日 志 文 件 说 明
		/var/log/message 系统启动后的信息和错误日志，是Red Hat Linux中最常用的日志之一  
		/var/log/secure 与安全相关的日志信息  
		/var/log/maillog 与邮件相关的日志信息  
		/var/log/cron 与定时任务相关的日志信息  
		/var/log/spooler 与UUCP和news设备相关的日志信息  
		/var/log/boot.log 守护进程启动和停止相关的日志消息 
	系统：
		# uname -a # 查看内核/操作系统/CPU信息  
		# cat /etc/issue  
		# cat /etc/redhat-release # 查看操作系统版本  
		# cat /proc/cpuinfo # 查看CPU信息  
		# hostname # 查看计算机名  
		# lspci -tv # 列出所有PCI设备  
		# lsusb -tv # 列出所有USB设备  
		# lsmod # 列出加载的内核模块  
		# env # 查看环境变量 
	资源：
		# free -m # 查看内存使用量和交换区使用量  
		# df -h # 查看各分区使用情况  
		# du -sh <目录名> # 查看指定目录的大小  
		# grep MemTotal /proc/meminfo # 查看内存总量  
		# grep MemFree /proc/meminfo # 查看空闲内存量  
		# uptime # 查看系统运行时间、用户数、负载  
		# cat /proc/loadavg # 查看系统负载 
	磁盘和分区：
		# mount | column -t # 查看挂接的分区状态  
		# fdisk -l # 查看所有分区  
		# swapon -s # 查看所有交换分区  
		# hdparm -i /dev/hda # 查看磁盘参数(仅适用于IDE设备)  
		# dmesg | grep IDE # 查看启动时IDE设备检测状况  
	网络：
		# ifconfig # 查看所有网络接口的属性  
		# iptables -L # 查看防火墙设置  
		# route -n # 查看路由表  
		# netstat -lntp # 查看所有监听端口  
		# netstat -antp # 查看所有已经建立的连接  
		# netstat -s # 查看网络统计信息 
	进程：
		# ps -ef # 查看所有进程  
		# top # 实时显示进程状态（另一篇文章里面有详细的介绍） 
	用户：
		# w # 查看活动用户  
		# id <用户名> # 查看指定用户信息  
		# last # 查看用户登录日志  
		# cut -d: -f1 /etc/passwd # 查看系统所有用户  
		# cut -d: -f1 /etc/group # 查看系统所有组  
		# crontab -l # 查看当前用户的计划任务 
	服务：
		# chkconfig –list # 列出所有系统服务  
		# chkconfig –list | grep on # 列出所有启动的系统服务 
	程序：
		# rpm -qa # 查看所有安装的软件包 		   
			   
			   
			   
			   
			   
			   
			   
			   
			   
			   
			   
			   
			   
			   
			   
			   
